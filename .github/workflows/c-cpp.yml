name: C/C++ CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-unixy:
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies (Linux)
      run: sudo apt-get install -y libboost-all-dev libxml2-dev libxml2-utils libreadline6-dev libprotobuf-dev protobuf-compiler doxygen graphviz
      if: matrix.os == 'ubuntu-latest'
    - name: Install dependencies (macOS)
      run: brew install protobuf boost doxygen graphviz
      if: matrix.os == 'macos-latest'
    - name: configure
      run: cmake -DPACKAGE=on ..
      working-directory: ./build
    - name: make
      run: make
      working-directory: ./build
    - name: make test
      run: make test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      working-directory: ./build
    
    - name: Create package
      run: make package
      working-directory: ./build
      
  build-windows:
    strategy:
      max-parallel: 5
      fail-fast: false
      matrix:
        os: ['windows-latest']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v2
    - name: Debug
      run: |
        dir C:\MSYS64
        echo %PATH%
        x86_64-w64-mingw32-ar --version
    - name: configure
      run: cmake -DPACKAGE=on -G "MinGW Makefiles" ..
      working-directory: ./build
      env:
        CC: x86_64-w64-mingw32-gcc
        CXX: x86_64-w64-mingw32-g++
        AR: x86_64-w64-mingw32-ar
    - name: make
      run: make
      working-directory: ./build
    - name: make test
      run: make test
      env:
        CTEST_OUTPUT_ON_FAILURE: 1
      working-directory: ./build
    
    - name: Create package
      run: make package
      working-directory: ./build
